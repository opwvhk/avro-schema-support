<idea-plugin>
	<id>net.sf.opk.avro-schema-support</id>
	<name>Apache Avro IDL Schema Support</name>
	<vendor email="oscar@westravanholthe.nl" url="https://www.github.com/opwvhk/avro-schema-support">
		Oscar Westra van Holthe - Kind
	</vendor>

	<!--
	TODO: When Avro 1.12.0 is released, add this to the 1st paragraph:
	This includes the <code>.avsc</code> equivalent schema syntax (new in Avro 1.12.0)!
	-->
	<description><![CDATA[
	<p>
		Avro IDL Schema Support extends Intellij IDEs to more easily work with Avro schemata and protocols in IDL or JSON format.
	</p>
	<p>IDL (<code>.avdl</code>) features include:<ul>
		<li>Syntax & error highlighting</li>
		<li>Code completion</li>
		<li>Formatting (configurable)</li>
		<li>Inspections and quick fixes</li>
		<li>Navigation, renaming, quote/brace pairs, etc.</li>
		<li>Converting Avro schemas/protocols from/to IDL</li>
	</ul></p>
	<p>JSON (<code>.avsc</code>/<code>.avpr</code>) features include:<ul>
		<li>Syntax & some error highlighting</li>
		<li>Code completion</li>
	</ul></p>
	<p>
		Please note that the JSON features are limited, as they are provided by IntelliJ JSON support combined with JSON schemas packaged
		in the plugin. Especially error detection is extremely limited, as are inspections.
	</p>
	]]></description>

	<!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html on how to target different products -->
	<depends>com.intellij.modules.platform</depends>
	<depends>com.intellij.modules.lang</depends>

	<extensionPoints>
		<extensionPoint qualifiedName="opwvhk.avro.idl.naming.convention" dynamic="true"
		                interface="opwvhk.intellij.avro_idl.naming.AvroIdlNamingConvention"/>
	</extensionPoints>
	<extensions defaultExtensionNs="com.intellij">
		<notificationGroup id="Avro IDL updates" displayType="STICKY_BALLOON"
		                   icon="opwvhk.intellij.avro_idl.AvroIdlIcons.LOGO"/>
		<postStartupActivity implementation="opwvhk.intellij.avro_idl.AvroIdlPluginUpdateStartupActivity"/>
		<errorHandler implementation="opwvhk.intellij.avro_idl.AvroIdlErrorReportSubmitter"/>
		<!-- File type & Language -->
		<fileType name="Avro IDL" fieldName="INSTANCE" language="Avro IDL" extensions="avdl"
		          implementationClass="opwvhk.intellij.avro_idl.AvroIdlFileType"/>
		<lang.parserDefinition language="Avro IDL"
		                       implementationClass="opwvhk.intellij.avro_idl.syntax.AvroIdlParserDefinition"/>
		<annotator language="Avro IDL" implementationClass="opwvhk.intellij.avro_idl.language.AvroIdlAnnotator"/>
		<lang.namesValidator language="Avro IDL"
		                     implementationClass="opwvhk.intellij.avro_idl.language.AvroIdlNamesValidator"/>
		<lang.elementManipulator forClass="opwvhk.intellij.avro_idl.psi.AvroIdlJsonStringLiteral"
		                         implementationClass="opwvhk.intellij.avro_idl.psi.AvroIdlJsonStringLiteralManipulator"/>
		<!-- Syntax highlighting & color definitions -->
		<lang.syntaxHighlighter language="Avro IDL"
		                        implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlSyntaxHighlighter"/>
		<colorSettingsPage implementation="opwvhk.intellij.avro_idl.editor.AvroIdlColorSettingsPage"/>
		<!-- Code completion (additional to type references) -->
		<completion.contributor language="Avro IDL"
		                        implementationClass="opwvhk.intellij.avro_idl.language.AvroIdlCompletionContributor"/>
		<!-- References, navigation & editor actions -->
		<lang.findUsagesProvider language="Avro IDL"
		                         implementationClass="opwvhk.intellij.avro_idl.language.AvroIdlFindUsagesProvider"/>
		<gotoSymbolContributor implementation="opwvhk.intellij.avro_idl.language.AvroIdlChooseByNameContributor"/>
		<lang.refactoringSupport language="Avro IDL"
		                         implementationClass="opwvhk.intellij.avro_idl.language.AvroIdlRefactoringSupportProvider"/>
		<lang.commenter language="Avro IDL" implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlCommenter"/>
		<quoteHandler fileType="Avro IDL" className="opwvhk.intellij.avro_idl.editor.AvroIdlTokenSetQuoteHandler"/>
		<!-- Angle brackets must be handled specially, as generic handling interferes with some languages (XML, Java) -->
		<lang.braceMatcher language="Avro IDL"
		                   implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlPairedBraceMatcher"/>
		<typedHandler implementation="opwvhk.intellij.avro_idl.editor.AvroIdlAngleBracketTypedHandler"/>
		<backspaceHandlerDelegate implementation="opwvhk.intellij.avro_idl.editor.AvroIdlAngleBracketBackspaceHandler"/>
		<declarationRangeHandler key="opwvhk.intellij.avro_idl.psi.AvroIdlNameIdentifierOwner"
		                         implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlDeclarationRangeHandler"/>
		<lang.documentationProvider language="Avro IDL"
		                            implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlDocumentationProvider"/>
		<!-- Structure view (also in project view and navigation bar) -->
		<lang.psiStructureViewFactory language="Avro IDL"
		                              implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlStructureViewFactory"/>
		<treeStructureProvider implementation="opwvhk.intellij.avro_idl.editor.AvroIdlTreeStructureProvider"/>
		<navbar implementation="opwvhk.intellij.avro_idl.editor.AvroIdlStructureAwareNavbar"/>
		<!-- Formatting & code style -->
		<lang.foldingBuilder language="Avro IDL"
		                     implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlFoldingBuilder"/>
		<lang.formatter language="Avro IDL"
		                implementationClass="opwvhk.intellij.avro_idl.editor.AvroIdlFormattingModelBuilder"/>
		<codeStyleSettingsProvider implementation="opwvhk.intellij.avro_idl.editor.AvroIdlCodeStyleSettingsProvider"/>
		<langCodeStyleSettingsProvider
				implementation="opwvhk.intellij.avro_idl.editor.AvroIdlLanguageCodeStyleSettingsProvider"/>
		<!-- Inspections (can be turned off) -->
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Duplicate annotations" level="WARNING"
		                 enabledByDefault="true"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlDuplicateAnnotationsInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Misplaced annotations"
		                 level="WEAK WARNING" enabledByDefault="true"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlMisplacedAnnotationsInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL"
		                 displayName="Invalid identifier in @namespace annotation" level="WARNING"
		                 enabledByDefault="true"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlInvalidNamespaceAnnotationInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Misplaced documentation" level="WARNING"
		                 enabledByDefault="true"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlMisplacedDocumentationInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Union can be simplified"
		                 level="WEAK WARNING" enabledByDefault="true"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlUseNullableShorthandInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Use of optional type" level="ERROR"
		                 enabledByDefault="false"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlAvoidNullableShorthandInspection"/>
		<!-- TODO: Enable when Avro supports the schema syntax (Avro 1.12.0) -->
		<!--
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Schema syntax available" level="WEAK WARNING"
		                 enabledByDefault="true" implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlUseSchemaSyntaxInspection"/>
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Use of schema syntax" level="ERROR"
		                 enabledByDefault="false" implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlAvoidSchemaSyntaxInspection"/>
		-->
		<localInspection language="Avro IDL" groupName="Avro IDL" displayName="Naming conventions" level="TYPO"
		                 enabledByDefault="false"
		                 implementationClass="opwvhk.intellij.avro_idl.inspections.AvroIdlNamingConventionInspection"/>

		<!-- Avro Schema & Protocol files (JSON derivative) -->
		<fileType name="Avro Schema" fieldName="INSTANCE" language="Avro Schema" extensions="avsc"
		          implementationClass="opwvhk.intellij.avro_idl.AvroSchemaFileType"/>
		<lang.parserDefinition language="Avro Schema"
		                       implementationClass="opwvhk.intellij.avro_idl.syntax.AvroSchemaParserDefinition"/>
		<fileType name="Avro Protocol" fieldName="INSTANCE" language="Avro Protocol" extensions="avpr"
		          implementationClass="opwvhk.intellij.avro_idl.AvroProtocolFileType"/>
		<lang.parserDefinition language="Avro Protocol"
		                       implementationClass="opwvhk.intellij.avro_idl.syntax.AvroProtocolParserDefinition"/>
	</extensions>
	<extensions defaultExtensionNs="opwvhk.avro.idl">
		<!--
		Please note: the naming convention order is explicitly reversed in the IntelliJ displaying code.
		This explains the use of "last"/"before" instead of the more logical "first"/"after".
		-->
		<naming.convention id="AvroIdlNamespaceNamingConvention" order="last"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlNamespaceNamingConvention"/>
		<naming.convention id="AvroIdlRecordNamingConvention" order="before AvroIdlNamespaceNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlRecordNamingConvention"/>
		<naming.convention id="AvroIdlErrorNamingConvention" order="before AvroIdlRecordNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlErrorNamingConvention"/>
		<naming.convention id="AvroIdlFieldNamingConvention" order="before AvroIdlErrorNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlFieldNamingConvention"/>
		<naming.convention id="AvroIdlEnumNamingConvention" order="before AvroIdlFieldNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlEnumNamingConvention"/>
		<naming.convention id="AvroIdlEnumConstantNamingConvention" order="before AvroIdlEnumNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlEnumConstantNamingConvention"/>
		<naming.convention id="AvroIdlFixedNamingConvention" order="before AvroIdlEnumConstantNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlFixedNamingConvention"/>
		<naming.convention id="AvroIdlProtocolNamingConvention" order="before AvroIdlFixedNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlProtocolNamingConvention"/>
		<naming.convention id="AvroIdlMessageNamingConvention" order="before AvroIdlProtocolNamingConvention"
		                   implementation="opwvhk.intellij.avro_idl.naming.AvroIdlMessageNamingConvention"/>
	</extensions>
	<extensions defaultExtensionNs="JavaScript">
		<JsonSchema.ProviderFactory
				implementation="opwvhk.intellij.avro_idl.json_schema.AvroJsonSchemaProviderFactory"/>
	</extensions>
	<extensions defaultExtensionNs="com.intellij.json">
		<jsonLikePsiWalkerFactory implementation="opwvhk.intellij.avro_idl.json_schema.AvroJsonSchemaPsiWalkerFactory"/>
	</extensions>
	<actions>
		<action id="AvroIdl.IdlToProtocol" text="Convert Avro IDL to Avro Protocol"
		        description="Convert Avro IDL file to an Avro protocol file."
		        class="opwvhk.intellij.avro_idl.actions.AvroIdlToProtocolAction">
			<add-to-group group-id="RefactoringMenu" anchor="last"/>
		</action>
		<action id="AvroIdl.IdlToSchema" text="Convert Avro IDL to Avro Schema"
		        description="Convert Avro IDL file to a minimal number of Avro schema files."
		        class="opwvhk.intellij.avro_idl.actions.AvroIdlToSchemaAction">
			<add-to-group group-id="RefactoringMenu" anchor="last"/>
		</action>
		<action id="AvroIdl.ProtocolToIdl" text="Convert Avro Protocol to Avro IDL"
		        description="Convert Avro protocol file an Avro IDL file."
		        class="opwvhk.intellij.avro_idl.actions.AvroProtocolToIdlAction">
			<add-to-group group-id="RefactoringMenu" anchor="last"/>
		</action>
		<action id="AvroIdl.SchemaToIdl" text="Convert Avro Schema to Avro IDL"
		        description="Convert Avro schema file an Avro IDL file."
		        class="opwvhk.intellij.avro_idl.actions.AvroSchemaToIdlAction">
			<add-to-group group-id="RefactoringMenu" anchor="last"/>
		</action>

		<group id="AvroIdl.NewGroup" text="Avro IDL">
			<action id="AvroIdlNewFile" class="opwvhk.intellij.avro_idl.actions.AvroIdlCreateFileFromAction"/>
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
		</group>
	</actions>
</idea-plugin>
