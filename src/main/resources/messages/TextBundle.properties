notification.group.avro.idl.updates=Avro IDL updates
group.AvroIdl.NewGroup.text=Avro IDL
inspection.group.avro=Avro IDL
inspection.duplicate.annotations=Duplicate annotations
inspection.duplicate.annotations.problem=Duplicate annotation (only the last will take effect)
inspection.duplicate.annotations.fix=Delete all @{0} annotations except the last
inspection.misplaced.annotations=Misplaced annotations
inspection.misplaced.annotations.problem=The @{0} annotation has no effect here
inspection.misplaced.annotations.fix=Remove the @{0} annotation
inspection.invalid.namespace.annotation=Invalid identifier in @namespace annotation
inspection.invalid.namespace.annotation.problem=The namespace is not composed of valid identifiers
inspection.misplaced.documentation=Misplaced documentation
inspection.misplaced.documentation.description=Misplaced documentation comment: documentation comments should be placed directly before declarations
inspection.misplaced.documentation.fixRemove=Delete misplaced documentation comment
inspection.misplaced.documentation.fixComment=Replace with multiline comment
inspection.use.nullable.shorthand=Union can be simplified
inspection.use.nullable.shorthand.fix=Replace union with shorthand notation
inspection.avoid.nullable.shorthand=Use of optional type
inspection.avoid.nullable.shorthand.problem=Use union instead of optional type
inspection.avoid.nullable.shorthand.fix=Replace with union of type with null
inspection.use.schema.syntax=Schema syntax available
inspection.use.schema.syntax.fix=Replace protocol with schema syntax
inspection.avoid.schema.syntax=Use of schema syntax
inspection.avoid.schema.syntax.fix=Replace schema syntax with protocol
inspection.naming.convention=Naming conventions
syntax.unknown.schema=Unknown schema: {0}
syntax.unknown.schema.fixRecord=Create record
syntax.unknown.schema.fixError=Create error
syntax.unknown.schema.fixEnum=Create enum
syntax.unknown.schema.fixFixed=Create fixed
syntax.not.an.error=Not an error: {0}
syntax.unknown.enum.default=Enum default must be one of the enum constants
syntax.unknown.enum.default.fix=Create symbol
# suppress inspection "UnusedProperty": used via a variable in AvroIdlAnnotator
syntax.duplicate.field.name=Field "{0}" is already defined
# suppress inspection "UnusedProperty": used via a variable in AvroIdlAnnotator
syntax.duplicate.message.parameter=Message parameter "{0}" is already defined
# suppress inspection "UnusedProperty": used via a variable in AvroIdlAnnotator
syntax.duplicate.enum.constant=Enum constant "{0}" is already defined
# suppress inspection "UnusedProperty": used via a variable in AvroIdlAnnotator
syntax.duplicate.schema=Schema "{0}" is already defined
syntax.not.a.valid.identifier=Not a valid identifier: {0}
syntax.not.a.valid.identifierWithNamespace=Not a valid identifier (with namespace): {0}
syntax.annotated.type.reference=Type references must not be annotated: Avro < 1.11.1 changes the referenced type, Avro >= 1.11.1 fails to compile.
syntax.annotated.type.reference.fix=Delete annotation from reference
syntax.invalid.annotation.namespace=@namespace annotations must contain a string
syntax.invalid.annotation.aliases.array=@aliases elements must be strings
syntax.invalid.annotation.aliases=@aliases annotations must contain an array of identifiers (strings)
syntax.invalid.annotation.order=@order annotation must contain one of: "ascending", "descending", "ignore"
syntax.invalid.annotation.logicalType=@logicalType annotation must contain a string naming the logical type
syntax.invalid.annotation.logicalType.requires.underlying.int=The logical type "{0}" requires the underlying type "int"
syntax.invalid.annotation.logicalType.requires.underlying.long=The logical type "{0}" requires the underlying type "long"
syntax.invalid.annotation.logicalType.duration=The logical type "duration" requires the underlying type "fixed", of 12 bytes
syntax.invalid.annotation.logicalType.decimal=The logical type "decimal" requires the underlying type "bytes" or "fixed"
syntax.invalid.annotation.logicalType.decimal.precision=@logicalType("decimal") requires a sibling @precision annotation with a number between 1 and 2^31-1
syntax.invalid.annotation.decimal.precision=@precision must contain a number between 1 and 2^31-1
syntax.invalid.annotation.decimal.precision.insufficient={0}, a fixed({1}), cannot store {2} digits (max {3})
syntax.invalid.annotation.decimal.scale=@scale must contain a non-negative number of at most the value of @precision
syntax.oneway.message=Oneway messages must have a void or null return type
naming.enum.constant=Enum constant
naming.enum=Enum
naming.error=Error
naming.field=Field
naming.fixed=Fixed
naming.message=Message
naming.namespace=Namespace
naming.protocol=Protocol
naming.record=Record
naming.fix.group=Rename
naming.fix.name=Rename
naming.fix.name.with.target=Rename to "{0}"
action.AvroIdl.IdlToProtocol.text=Convert Avro IDL to Avro Protocol
action.AvroIdl.IdlToProtocol.description=Convert Avro IDL file to an Avro protocol file.
action.AvroIdl.IdlToSchema.text=Convert Avro IDL to Avro Schema
action.AvroIdl.IdlToSchema.description=Convert Avro IDL file to a minimal number of Avro schema files.
action.AvroIdl.ProtocolToIdl.text=Convert Avro Protocol to Avro IDL
action.AvroIdl.ProtocolToIdl.description=Convert Avro protocol file an Avro IDL file.
action.AvroIdl.SchemaToIdl.text=Convert Avro Schema to Avro IDL
action.AvroIdl.SchemaToIdl.description=Convert Avro schema file an Avro IDL file.
options.AvroIdl.color.descriptor.documentation.comment=Comments//Documentation comment
options.AvroIdl.color.descriptor.block.comment=Comments//Block comment
options.AvroIdl.color.descriptor.line.comment=Comments//Line comment
options.AvroIdl.color.descriptor.bad.character=Bad character
options.AvroIdl.color.descriptor.string=String
options.AvroIdl.color.descriptor.number=Number
options.AvroIdl.color.descriptor.braces=Braces and Operators//Braces
options.AvroIdl.color.descriptor.parentheses=Braces and Operators//Parentheses
options.AvroIdl.color.descriptor.brackets=Braces and Operators//Brackets
options.AvroIdl.color.descriptor.semicolon=Braces and Operators//Semicolon
options.AvroIdl.color.descriptor.comma=Braces and Operators//Comma
options.AvroIdl.color.descriptor.equals=Braces and Operators//Equals
options.AvroIdl.color.descriptor.keywords=Keywords
options.AvroIdl.color.descriptor.types=Types
options.AvroIdl.color.descriptor.annotations=Annotations
code.style.space_around_assignment_operators.title=Assignment operator (=)
code.style.space_after_comma_in_type_arguments.group=Within messages
code.style.blank_lines_around_class.title=Around named type
code.style.blank_lines_after_package.title=After namespace declaration
code.style.add_alias_on_schema_rename.title=Add alias on schema rename
code.style.add_alias_on_schema_rename.group=Aliases
code.style.add_alias_on_field_rename.title=Add alias on field rename
code.style.add_alias_on_field_rename.group=Aliases
quick.navigate.info.name.in.file="{0}" in {1}
filetype.avdl.description=Apache Avro\u8482 IDL
filetype.avpr.description=Apache Avro\u8482 Protocol
filetype.avsc.description=Apache Avro\u8482 Schema
error.reporter.notice.anonymous=I agree to my hardware configuration, software configuration, product information, and \
  the error details shown above being published in the GitHub repository \
  <a href="https://github.com/{0}/issues">{0}}</a> to allow volunteers provide support if they have time. \
  The reported exception data are not expected to contain any personal data.
error.reporter.failure.manual.fix=Please file this bug report at: https://github.com/{0}/issues/new\n\n{1}
